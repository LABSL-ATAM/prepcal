%!PS-Adobe-1.0
%%CreationDate: 04 Jul 2016 (Mon) 04:53:32pm
%%Creator: Generated by pcal v4.11.0 (http://pcal.sourceforge.net)
%%For: lf
%%Routing: lf
%%Title: calendar for 01.2016 - 12.2016 (from c.calendar)
%%Orientation: Landscape
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%ProofMode: NotifyMe
%%EndComments

statusdict /lettertray known { statusdict begin lettertray end } if
/small 1 def
/medium -1 def
/large 0 def
/titlefont /Times-Bold def
/datefont /Times-Bold def
/notesfont /Helvetica-Narrow def
/weekdayfont titlefont def
/footfont titlefont def
/headingfont titlefont def
/datemargin [ 4 10 ] def
/gridlinewidth [ 1.0 2.5 ] def
/titlefontsize [ 48 60 ] def
/datefontsize [ 25 60 ] def
/weekdayfontsize 12 def
/footfontsize 12 def
/notesfontsize 6 def
/headingfontsize 12 def
/FontFind { findfont exch scalefont } def
/FF 0 def
/HF 0 def
/hf_large { headingfontsize headingfont FontFind } def
/TF 1 def
/tf_large { titlefontsize large get titlefont FontFind } def
/tf_small { titlefontsize small get titlefont FontFind } def
/DF 3 def
/df_large { datefontsize large get datefont FontFind } def
/df_small { datefontsize small get datefont FontFind } def
/NF 5 def
/nf_large { notesfontsize notesfont FontFind } def
/WF 6 def
/wf_large { weekdayfontsize weekdayfont FontFind } def
/allfonts [
	hf_large tf_large tf_small df_large df_small nf_large wf_large 
] def
/month_names [
	(January) (February) (March) (April) (May) (June)
	(July) (August) (September) (October) (November) (December) ] def
/day_names [
	(Sunday) (Monday) (Tuesday) (Wednesday) (Thursday) (Friday)
	(Saturday) ] def
/linesep (\056p) def
/boldfont (\056b) def
/italicfont (\056i) def
/romanfont (\056r) def
/pagewidth 612 def
/pageheight 792 def
/rval 90 def
/xsval 1.000 def
/ysval 1.000 def
/xtval 46 def
/ytval -85 def
/ytop 85 def
/daywidth 100 def
/dayheight 80 def
/draw-moons false def
/julian-dates false def
/fill-boxes true def
/prev_small_cal 40 def
/next_small_cal 41 def
/dategray 0.800 def
/fillgray 0.900 def
/Y0 0 def				% Y-coordinate of calendar grid origin

/gridwidth daywidth 7 mul def
/gridheight dayheight 6 mul def
/negdaywidth daywidth neg def
/negdayheight dayheight neg def
/neggridwidth gridwidth neg def
/neggridheight gridheight neg def

/textmargin 2 def			% left/right margin for text
/notemargin 4 def			% left/right margin for notes
/charlinewidth 0.1 def			% width of outline characters

/datewidth 2 array def			% for aligning holiday text

/moonlinewidth 0.1 def			% width of moon icon line
/radius 6 def				% radius of moon icon
/halfperiod 0.5 def			% scale factors, etc. used by 'domoon'
/quartperiod 0.25 def
/offset radius datemargin 0 get add def
/rect radius 2 sqrt mul quartperiod div def

/ROMAN 0 def				% font types for text in boxes
/BOLD 1 def
/ITALIC 2 def
/currfonttype ROMAN def
/boldoffset 0.5 def			% offset for overstriking bold text

% simulate Italic text by slanting Roman text - note that this is properly
% called 'Oblique'

/italicangle 12 def			% angle for slanting Italic text
/italicmatrix				% Italic font matrix
 [notesfontsize 0 notesfontsize italicangle dup sin exch cos div mul
 notesfontsize 0 0] def

/hangingindent (   ) def		% for indenting continued text lines

% disable duplex mode (if supported)
statusdict (duplexmode) known { statusdict begin false setduplexmode end } if

%
% Utility functions:
%

% <fontposition> FontSet => --
%
% set current font to element <fontposition> of 'allfonts' array
%
/FontSet {
	allfonts exch
	userdict /CurrentFontSet 2 index put
	get setfont
} bind def

% <size> *FontSet => --
%
% fetch pre-scaled font (of desired calendar size) from 'allfonts' array
%
/TitleFontSet {TF add FontSet} bind def

/DateFontSet {DF add FontSet} bind def

% -- *FontSet => --
%
% fetch pre-scaled font (of constant size) from 'allfonts' array
%
/WeekdayFontSet {WF FontSet} bind def

/FootFontSet {FF FontSet} bind def

/NotesFontSet {NF FontSet /currfonttype ROMAN def} bind def

/HeadingFontSet {HF FontSet} bind def

% <string> <width> center => --
%
% display <string> centered horizontally in <width>
%
/center {
	1 index stringwidth pop sub 2 div 0 rmoveto show
} bind def

% <string> <width> left => --
%
% display <string> justified left in <width>
%
/left {
   1 index show
} bind def

% <string> <width> right => --
%
% display <string> justified right in <width>
%
/right {
   1 index stringwidth pop sub 0 rmoveto show
} bind def

% <str1> <str2> strcat => <string>
%
% concatenate <str1> and <str2>; push result onto stack
%
/strcat {
	2 copy
	length exch length
	dup 3 -1 roll add
	string
	dup 0 6 -1 roll putinterval
	dup 3 -1 roll 4 -1 roll putinterval
} bind def

% -- nextbox => --
%
% move to same relative position within following day's box
%
/nextbox {
	day startbox add 7 mod 0 eq			% end of week?
		{ neggridwidth daywidth add negdayheight rmoveto }  % next row
		{ daywidth 0 rmoveto }				    % next col
	ifelse
} bind def

% <box> boxpos => <x> <y>
%
% calculate and push coordinates of upper-left corner of <box> (0..41)
%
/boxpos {
	dup 7 mod daywidth mul					% x-coord
	exch 7 idiv negdayheight mul Y0 add			% y-coord
} bind def

% <day> datepos => <x> <y>
%
% calculate and push coordinates of upper-left corner of box for <day>
%
/datepos {
	startbox add 1 sub dup 7 mod daywidth mul		% x-coord
	exch 7 idiv negdayheight mul Y0 add			% y-coord
} bind def

%
% Functions for drawing components of calendar:
%
% The point size of a PostScript font includes the descenders on [gjpqy],
% but the Y-origin for printing text starts above any descenders (at the
% bottom of the upper-case characters).  The following code - and other
% code concerned with vertical spacing - assumes that the descenders
% occupy 1/4 of the overall point size.

% -- drawtitle => --
%
% print month/year title centered at top of calendar
%
/drawtitle {
	/fontsize titlefontsize calsize get def
	calsize TitleFontSet
	/month_name month_names month 1 sub get def
	/yearstring year 10 string cvs def
	0 Y0 fontsize 0.25 mul add
	  calsize small eq { 4 } { weekdayfontsize } ifelse
	  1.15 mul add moveto
   month_name (  ) strcat yearstring strcat gridwidth center
} bind def

% -- drawdaynames => --
%
% print weekday names centered above respective columns
%
/drawdaynames {	
	WeekdayFontSet
	0 1 6 {
		/i exch def
		i daywidth mul Y0 weekdayfontsize 0.4 mul add moveto
		day_names i get
		daywidth center
	} for
} bind def

% -- drawgrid => --
%
% draw the grid (6 rows x 7 columns) for the calendar
%
/drawgrid {
	gridlinewidth calsize get setlinewidth

	1 1 6 {					% inner vertical lines
		daywidth mul Y0 moveto
		0 neggridheight rlineto
		stroke
	} for

	1 1 5 {					% inner horizontal lines
		0 exch negdayheight mul Y0 add moveto
		gridwidth 0 rlineto
		stroke
	} for

	newpath					% border (w/mitered corners)
	0 Y0 moveto
	gridwidth 0 rlineto
	0 neggridheight rlineto
	neggridwidth 0 rlineto
	closepath
	stroke
} bind def

% -- drawnums => --
%
% print dates in appropriate boxes of calendar
%
/drawnums {
	/fontsize datefontsize calsize get def
	/margin datemargin calsize get def
	calsize DateFontSet
	charlinewidth setlinewidth
	1 datepos fontsize 0.75 mul margin add sub exch margin add exch moveto

	% calculate date widths for 'holidaytext' to use; use '2' for all
	% single-digit dates and '22' for all double-digit dates
	calsize large eq {
		datewidth 0 (2) stringwidth pop margin 2 mul add put
		datewidth 1 (22) stringwidth pop margin 2 mul add put
	} if

	calsize small eq {
		/color 0 def		% small calendar dates (all black)
		1 1 ndays {
			/day exch def
			prtday
			nextbox
		} for
	} {
		1 1 ndays {		% medium/large calendar dates
			/day exch def
			/color date_color day get def
			prtday
			nextbox
		} for
	} ifelse
} bind def

% -- startpage => --
%
% initialize new physical page
%
/startpage {
	rval rotate
	xsval ysval scale
	xtval ytval translate
} bind def

% -- calendar => --
%
% draw calendar for 'month'/'year', with various features enabled/disabled
% according to 'calsize'
%
/calendar {
	drawtitle					% month/year
	calsize small ne { drawdaynames } if		% weekday names
	calsize large eq { footstrings } if		% footer strings
	drawnums					% dates
	calsize large eq				% Julian dates
	  julian-dates false ne and { drawjnums } if
	fill-boxes { drawfill } if			% fill boxes
	drawgrid					% grid
	calsize large eq				% moon icons
	  draw-moons false ne and { drawmoons } if   
	0 0 moveto
} bind def

% print 'day' in 'color' (black, gray, outline, or outline-gray; cf. pcaldefs.h)
% using single value in 'dategray' as gray shade
%
/prtday {					% black and white version
	gsave
	day 3 string cvs			% convert day to string
	[
		{ show }				% black (0)
		{ dategray setgray show }		% gray (1)
		{ true charpath stroke }		% outline (2)
		{ true charpath gsave			% outline-gray (3)
		  dategray setgray fill
		  grestore stroke }
	] color get exec			% execute operators for color
	grestore
} bind def

% set fill box shading using single value in 'fillgray'
%
/setfill {					% black and white version
	fillgray setgray
} def

/footstrings {} bind def

% <first> <last> fillboxes => --
%
% fill empty calendar boxes in range <first>..<last> (0..41)
%
/fillboxes {
	/last exch def
	/first exch def

	first 1 last {		% loop through range of boxes
		/box exch def
		/fillit true def
		calsize large eq {	% skip note and small calendar boxes
			noteboxes { box eq { /fillit false def } if } forall
			box prev_small_cal eq box next_small_cal eq or {
				/fillit false def
			} if
		} if
		fillit {		% move to position and fill the box
			box boxpos moveto
			gsave
			setfill
			daywidth 0 rlineto
			0 negdayheight rlineto
			negdaywidth 0 rlineto
			closepath fill
			grestore
		} if
	} for
} bind def

% -- drawfill => --
%
% fill in unused boxes before and after calendar dates
%
/drawfill {
	0 startbox 1 sub fillboxes		% fill boxes before calendar
	startbox ndays add 41 fillboxes		% fill boxes after calendar
} bind def

%
% Functions for printing text (and/or images) inside boxes:
%

% <day> <text> daytext => --
%
% print <text> in <day> box (below date)
%
/daytext {
	/mytext exch def /day exch def
	NotesFontSet
	day datepos datefontsize large get 0.75 mul datemargin large get
	  2 mul add notesfontsize 0.75 mul add sub dup
	  /ypos exch def exch textmargin add exch moveto
	currentpoint pop /LM exch def
	/RM LM daywidth textmargin 2 mul sub add def
	showtext
} bind def

% <day> <text> holidaytext => --
%
% print <text> in <day> box (to right of date)
%
/holidaytext {
	/mytext exch def /day exch def

	/datesize datefontsize large get def 
	/margin datemargin large get def
	/dwidth datewidth day 10 lt { 0 } { 1 } ifelse get def

	% display the text between the date and the moon icon (if any)
	NotesFontSet
	day datepos margin notesfontsize 0.75 mul add sub dup
	/ypos exch def exch dwidth add exch moveto
	currentpoint pop /LM exch def
	/mwidth do-moon-p {offset radius add} {0} ifelse def	% moon width
	/RM LM daywidth textmargin sub dwidth mwidth add sub add def
	showtext
} bind def

% <box> <text> notetext => --
%
% print notes heading (if any) and <text> in <box> (0..41)
%
/notetext {
	/mytext exch def /box exch def

	% skip notes box heading if null
	notesheading () eq {
		box boxpos notemargin notesfontsize 0.75 mul add sub dup
	} {
		box boxpos notemargin headingfontsize 0.75 mul add sub exch
		  notemargin add exch moveto
		HeadingFontSet
		notesheading show
		box boxpos notemargin headingfontsize add
		  notesfontsize add sub dup
	} ifelse
	/ypos exch def exch notemargin add exch moveto

	% display the notes text
	NotesFontSet
	/LM currentpoint pop def
	/RM LM daywidth notemargin 2 mul sub add def
	showtext
} bind def

% -- crlf => --
%
% simulate carriage return/line feed sequence
%
/crlf {
	ypos notesfontsize sub /ypos exch def LM ypos moveto
} bind def

% <string> prstr => --
%
% print <string> on current line if possible; otherwise print on next line
%
/prstr {
	gsave				% in case rescaling is necessary
	dup stringwidth pop currentpoint pop add RM gt {	% too wide?
		% move to the next line (unless this is the initial word)
		currentpoint pop LM ne {
			crlf hangingindent show
		} if
		% rescale in X dimension as necessary to make word fit
		dup stringwidth pop RM currentpoint pop sub gt {
			dup stringwidth pop RM currentpoint pop sub exch div 1
			scale
		} if
	} if
	currfonttype BOLD eq
		{ dup currentpoint 2 index show exch 0.5 add exch moveto show }
		{ show }
	ifelse
	currentpoint grestore moveto	% grestore alone would reset position
} bind def

% -- showtext => --
%
% print words in 'mytext', inserting line breaks where necessary (or requested)
%
/showtext {
	mytext {
		/word exch def
		/i 1 def
		/n 0 def

		% look up current word in list of special formatting strings
		[ linesep boldfont italicfont romanfont ] {
			word eq {
				/n i def
			} if
			/i i 1 add def
		} forall
	
		% n will be 0 if current word is an ordinary word, 1..4 if it
		% is a formatting string; execute corresponding block of code
		[
			{ word prstr ( ) show }		% ordinary word

			{ crlf				% line separator (.p)
			  NotesFontSet }		% reset font type

			{ NotesFontSet			% font => bold (.b)
			  /currfonttype BOLD def }

			{ /currfonttype ITALIC def	% font => italic (.i)
			  notesfont findfont italicmatrix makefont setfont }

			{ NotesFontSet }		% font => roman (.r)
		] n get exec
	} forall
} bind def

% <day> <text> <EPS-image-filename> <x-scaling> <y-scaling> <x-offset> <y-offset> epsimage => --
%
% print image <EPS-image-filename> in <day> box (below date)
%
/epsimage {
	/yoffset exch def /xoffset exch def
	/yscale exch def /xscale exch def
	/myimage exch def /mytext exch def /day exch def
	NotesFontSet
	day datepos datefontsize large get 0.75 mul datemargin large get
	2 mul add
	sub dup
	/ypos exch def exch textmargin add exch
	moveto
	currentpoint
	
	gsave
	yoffset add exch xoffset add exch  % add the X,Y offsets
	translate
	xscale yscale scale

	% 
	% Temporarily redefine the 'showpage' operator to null so that it's
	% ignored when the EPS image file is processed...
	%
	1 dict begin /showpage { } bind def
	myimage run
	end
        
	grestore
} bind def

% -- printmonth => --
%
% print full-size calendar for 'month'/'year' on single page
%
/printmonth {
	/calsize large def
	startpage
	calendar
	printsmallcals				% small calendars
	
} bind def

% scale factor (slightly < 1/7) and offset for printing small calendars
/scscale .138 def
/scoffset gridwidth gridwidth scscale 7 mul mul sub 2.0 div def

% -- printsmallcals => --
%
% print small calendars in boxes 'prev_small_cal' and 'next_small_cal'
%
/printsmallcals {
	/calsize small def
	/sv_startbox startbox def

	prev_small_cal 0 ge {			% previous month/year
		/year p_year def
		/month p_month def
		/startbox p_startbox def
		/ndays p_ndays def
		gsave
		prev_small_cal boxpos translate
		scscale dup scale
		scoffset ytop neg translate
		calendar
		grestore
	} if

	next_small_cal 0 ge {			% next month/year
		/year n_year def
		/month n_month def
		/startbox n_startbox def
		/ndays n_ndays def
		gsave
		next_small_cal boxpos translate
		scscale dup scale
		scoffset ytop neg translate
		calendar
		grestore
	} if

	/startbox sv_startbox def		% required for text boxes
} bind def

/drawjnums {} bind def

/do-moon-p { false } bind def
/drawmoons {} bind def

%%Page: 1 1
%%BeginPageSetup
clear flush
/PageNum { 1 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 1 def
/startbox 5 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  0 1 1 0 0 0 0 0 1 1  0 0 0 0 0 1 1 0 0 0  0 0 1 1 0 0 0 0 0 1  1 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2015 def
/p_month 12 def
/p_startbox 2 def
/p_ndays 31 def
/n_year 2016 def
/n_month 2 def
/n_startbox 1 def
/n_ndays 29 def
printmonth
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 2 2
%%BeginPageSetup
clear flush
/PageNum { 2 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 2 def
/startbox 1 def
/ndays 29 def
/noteboxes [ ] def
/date_color [ -1  0 0 0 0 0 1 1 0 0 0  0 0 1 1 0 0 0 0 0 1  1 0 0 0 0 0 1 1 0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 1 def
/p_startbox 5 def
/p_ndays 31 def
/n_year 2016 def
/n_month 3 def
/n_startbox 2 def
/n_ndays 31 def
printmonth
10 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
] daytext
11 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (examenes) (finales) (\050febrero) (y) (marzo\051) 
] daytext
12 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (examenes) (finales) (\050febrero) (y) (marzo\051) 
] daytext
15 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (examenes) (finales) (\050febrero) (y) (marzo\051) 
] daytext
16 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (examenes) (finales) (\050febrero) (y) (marzo\051) 
] daytext
17 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (examenes) (finales) (\050febrero) (y) (marzo\051) 
] daytext
18 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
] daytext
19 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
] daytext
22 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050febrero\051) 
] daytext
23 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050febrero\051) 
] daytext
24 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050febrero\051) 
] daytext
25 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050febrero\051) 
] daytext
26 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050febrero\051) 
(\056p)
(Inscripciones) (a) (cursadas) (\0501er) (cuatrimestre) (y) (anuales\051) 
] daytext
29 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (cursadas) (\0501er) (cuatrimestre) (y) (anuales\051) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 3 3
%%BeginPageSetup
clear flush
/PageNum { 3 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 3 def
/startbox 2 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  0 0 0 0 1 1 0 0 0 0  0 1 1 0 0 0 0 0 1 1  0 0 0 0 0 1 1 0 0 0  0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 2 def
/p_startbox 1 def
/p_ndays 29 def
/n_year 2016 def
/n_month 4 def
/n_startbox 5 def
/n_ndays 30 def
printmonth
1 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (cursadas) (\0501er) (cuatrimestre) (y) (anuales\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050marzo\051) 
] daytext
2 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (cursadas) (\0501er) (cuatrimestre) (y) (anuales\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050marzo\051) 
] daytext
3 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Inscripciones) (a) (cursadas) (\0501er) (cuatrimestre) (y) (anuales\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050marzo\051) 
] daytext
4 [ 
(Nivelaci\046oacute\073n) (y) (orientaci\046oacute\073n) (ar\046iacute\073stica\055profesional) (para) (ingresantes) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050marzo\051) 
] daytext
7 [ 
(Inician) (cursadas) (\0501er) (cuatrimestre\051) 
] daytext
24 [ 
(Asueto) (40) (A\046ntilde\073os) (D\046iacute\073a) (Nacional) (de) (la) (Memoria\056\056\056) 
(\056p)
(Asueto) (Jueves) (Santo) 
] daytext
25 [ 
(Asueto) (Viernes) (Santo) 
] daytext
27 [ 
(Asueto) (Domingo) (de) (Pascua) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 4 4
%%BeginPageSetup
clear flush
/PageNum { 4 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 4 def
/startbox 5 def
/ndays 30 def
/noteboxes [ ] def
/date_color [ -1  0 1 1 0 0 0 0 0 1 1  0 0 0 0 0 1 1 0 0 0  0 0 1 1 0 0 0 0 0 1 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 3 def
/p_startbox 2 def
/p_ndays 31 def
/n_year 2016 def
/n_month 5 def
/n_startbox 0 def
/n_ndays 31 def
printmonth
2 [ 
(Asueto) (D\046iacute\073a) (del) (Veterano) (y) (de) (los) (Ca\046iacute\073dos) (en) (la) (Guerra) (de) (Malvinas) 
] daytext
24 [ 
(Asueto) (D\046iacute\073a) (de) (Acci\046oacute\073n) (por) (la) (Tolerancia) (y) (Respeto) (de) (los) (Pueblos) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 5 5
%%BeginPageSetup
clear flush
/PageNum { 5 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 5 def
/startbox 0 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  1 0 0 0 0 0 1 1 0 0  0 0 0 1 1 0 0 0 0 0  1 1 0 0 0 0 0 1 1 0  0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 4 def
/p_startbox 5 def
/p_ndays 30 def
/n_year 2016 def
/n_month 6 def
/n_startbox 3 def
/n_ndays 30 def
printmonth
1 [ 
(Asueto) (D\046iacute\073a) (del) (Trabajador) 
] daytext
25 [ 
(Asueto) (Primer) (Gobierno) (Patrio) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 6 6
%%BeginPageSetup
clear flush
/PageNum { 6 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 6 def
/startbox 3 def
/ndays 30 def
/noteboxes [ ] def
/date_color [ -1  0 0 0 1 1 0 0 0 0 0  1 1 0 0 0 0 0 1 1 0  0 0 0 0 1 1 0 0 0 0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 5 def
/p_startbox 0 def
/p_ndays 31 def
/n_year 2016 def
/n_month 7 def
/n_startbox 5 def
/n_ndays 31 def
printmonth
20 [ 
(Asueto) (Paso) (a) (la) (Inmortalidad) (del) (General) (Manuel) (Belgrano) 
] daytext
27 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
28 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
29 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
30 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 7 7
%%BeginPageSetup
clear flush
/PageNum { 7 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 7 def
/startbox 5 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  0 1 1 0 0 0 0 0 1 1  0 0 0 0 0 1 1 0 0 0  0 0 1 1 0 0 0 0 0 1  1 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 6 def
/p_startbox 3 def
/p_ndays 30 def
/n_year 2016 def
/n_month 8 def
/n_startbox 1 def
/n_ndays 31 def
printmonth
1 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
5 [ 
(Inscripciones) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
(\056p)
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
] daytext
6 [ 
(Inscripciones) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
(\056p)
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
] daytext
7 [ 
(Inscripciones) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
(\056p)
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
] daytext
8 [ 
(Inscripciones) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
(\056p)
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
] daytext
9 [ 
(Asueto) (Bicentenario) (de) (la) (Independencia) (Argentina) (1816) (\055) (2016\056) 
] daytext
11 [ 
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
] daytext
12 [ 
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
] daytext
13 [ 
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
] daytext
14 [ 
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
] daytext
15 [ 
(Inscripciones) (a) (cursadas) (\0502do) (cuatrimestre\051) 
(\056p)
(Llamado) (a) (examenes) (finales) (\050julio) (\055) (\046uacute\073nico) (llamado\051) 
] daytext
18 [ 
(Receso) (Invernal) 
] daytext
19 [ 
(Receso) (Invernal) 
] daytext
20 [ 
(Receso) (Invernal) 
] daytext
21 [ 
(Receso) (Invernal) 
] daytext
22 [ 
(Receso) (Invernal) 
] daytext
25 [ 
(Receso) (Invernal) 
] daytext
26 [ 
(Receso) (Invernal) 
] daytext
27 [ 
(Receso) (Invernal) 
] daytext
28 [ 
(Receso) (Invernal) 
] daytext
29 [ 
(Receso) (Invernal) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 8 8
%%BeginPageSetup
clear flush
/PageNum { 8 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 8 def
/startbox 1 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  0 0 0 0 0 1 1 0 0 0  0 0 1 1 0 0 0 0 0 1  1 0 0 0 0 0 1 1 0 0  0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 7 def
/p_startbox 5 def
/p_ndays 31 def
/n_year 2016 def
/n_month 9 def
/n_startbox 4 def
/n_ndays 30 def
printmonth
1 [ 
(Inician) (cursadas) (\0502do) (cuatrimestre\051) 
] daytext
15 [ 
(Asueto) (Paso) (a) (la) (Inmortalidad) (del) (General) (Jos\046eacute\073) (de) (San) (Mart\046iacute\073n) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 9 9
%%BeginPageSetup
clear flush
/PageNum { 9 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 9 def
/startbox 4 def
/ndays 30 def
/noteboxes [ ] def
/date_color [ -1  0 0 1 1 0 0 0 0 0 1  1 0 0 0 0 0 1 1 0 0  0 0 0 1 1 0 0 0 0 0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 8 def
/p_startbox 1 def
/p_ndays 31 def
/n_year 2016 def
/n_month 10 def
/n_startbox 6 def
/n_ndays 31 def
printmonth
21 [ 
(Asueto) (D\046iacute\073a) (de) (las) (Artes) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 10 10
%%BeginPageSetup
clear flush
/PageNum { 10 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 10 def
/startbox 6 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  1 1 0 0 0 0 0 1 1 0  0 0 0 0 1 1 0 0 0 0  0 1 1 0 0 0 0 0 1 1  0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 9 def
/p_startbox 4 def
/p_ndays 30 def
/n_year 2016 def
/n_month 11 def
/n_startbox 2 def
/n_ndays 30 def
printmonth
3 [ 
(Asueto) (A\046ntilde\073o) (Nuevo) (Isl\046aacute\073mico\052) 
] daytext
10 [ 
(Asueto) (D\046iacute\073a) (del) (Respeto) (a) (la) (Diversidad) (Cultural) 
] daytext
12 [ 
(Asueto) (Yom) (Kipur\054) (Gran) (D\046iacute\073a) (del) (Perd\046oacute\073n\052) 
] daytext
22 [ 
(Asueto) (D\046iacute\073a) (de) (la) (Universidad) (Nacional) (de) (las) (Artes) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 11 11
%%BeginPageSetup
clear flush
/PageNum { 11 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 11 def
/startbox 2 def
/ndays 30 def
/noteboxes [ ] def
/date_color [ -1  0 0 0 0 1 1 0 0 0 0  0 1 1 0 0 0 0 0 1 1  0 0 0 0 0 1 1 0 0 0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 10 def
/p_startbox 6 def
/p_ndays 31 def
/n_year 2016 def
/n_month 12 def
/n_startbox 4 def
/n_ndays 31 def
printmonth
18 [ 
(Concluyen) (cursadas) 
] daytext
21 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
22 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
23 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
24 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
25 [ 
(Cierre) (de) (notas) (\057) (carga) (de) (actas) 
] daytext
26 [ 
(Asueto) (D\046iacute\073a) (del) (Trabajador) (No) (Docente) 
] daytext
28 [ 
(Inscripciones) (a) (examenes) (finales) (\050diciembre\051) 
(\056p)
(Asueto) (D\046iacute\073a) (de) (la) (Soberan\046iacute\073a) (Nacional) 
] daytext
29 [ 
(Inscripciones) (a) (examenes) (finales) (\050diciembre\051) 
] daytext
30 [ 
(Inscripciones) (a) (examenes) (finales) (\050diciembre\051) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Page: 12 12
%%BeginPageSetup
clear flush
/PageNum { 12 } def
/PageState save def
%%EndPageSetup

/year 2016 def
/month 12 def
/startbox 4 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  0 0 1 1 0 0 0 0 0 1  1 0 0 0 0 0 1 1 0 0  0 0 0 1 1 0 0 0 0 0  1 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2016 def
/p_month 11 def
/p_startbox 2 def
/p_ndays 30 def
/n_year 2017 def
/n_month 1 def
/n_startbox 0 def
/n_ndays 31 def
printmonth
1 [ 
(Inscripciones) (a) (examenes) (finales) (\050diciembre\051) 
] daytext
2 [ 
(Inscripciones) (a) (examenes) (finales) (\050diciembre\051) 
] daytext
5 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (1er) (turno\051) 
] daytext
6 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (1er) (turno\051) 
] daytext
7 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (1er) (turno\051) 
] daytext
8 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (1er) (turno\051) 
] daytext
12 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (2do) (turno\051) 
] daytext
13 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (2do) (turno\051) 
] daytext
14 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (2do) (turno\051) 
] daytext
15 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (2do) (turno\051) 
] daytext
16 [ 
(Llamado) (a) (examenes) (finales) (\050diciembre) (\055) (2do) (turno\051) 
] daytext
19 [ 
(Concluyen) (las) (Actividades) 
] daytext
%%PageTrailer
showpage
clear flush
PageState restore
%%Trailer
clear flush
%%EOF
